set("log.file.path","/usr/share/rfk/var/log/liquidsoap.log")
      #set("log.stdout", false)
      set("server.telnet", true)
      set("harbor.bind_addr","192.168.2.101")
      set("harbor.port",8010)

def crossfade(a,b)
            add(normalize=false,
            [ sequence([ blank(duration=5.),
            fade.initial(duration=10.,b) ]),
            fade.final(duration=10.,a) ])
         end
def next(j,a,b)
          add(normalize=false,[ sequence(merge=true,[ blank(duration=3.),
              fade.initial(duration=6.,b) ]),
              sequence([fade.final(duration=9.,a),
              j,fallback([])]) ])
          end
def transition(j,a,b)
              add(normalize=false,[ fade.initial(b),sequence(merge=true,
              [blank(duration=1.),j,fallback([])]),
              fade.final(a) ])
          end
def onfade(old, new)
            add([amplify(2.0,new), amplify(0.1, old)])
          end

          def outfade(old, new)
            add([new, old])
          end
def depair(data)
            "#{fst(data)}='#{snd(data)}'"
          end

    def auth(login,password) =
            ret = get_process_lines("php /usr/share/rfk/bin/liquidsoap.php auth #{quote(login)} #{quote(password)}")
            ret = list.hd(ret)
            bool_of_string(ret)
          end

          def live_start(mdata)
            data = string.concat(separator=";", list.map(depair, mdata))
            ignore(test_process("php /usr/share/rfk/bin/liquidsoap.php connect #{quote(data)}"))
          end

          def live_stop()
            ignore(test_process("php /usr/share/rfk/bin/liquidsoap.php disconnect"))
          end

          def writemeta(mdata)
            mymeta = string.concat(separator=";", list.map(depair, mdata))
            ignore(test_process("php /usr/share/rfk/bin/liquidsoap.php meta #{quote(mymeta)}"))
          end
live = input.harbor(on_connect = live_start, on_disconnect = live_stop, buffer=0., max = 10., auth = auth, "/live.ogg")

          #playlist = playlist(reload=1,reload_mode="rounds","http://localhost/rfk/api/playlist.php")
          
	      playlist  = request.dynamic({ request.create("bar:foo", indicators= get_process_lines("php /usr/share/rfk/bin/playlist.php"))})
	      playlist = rewrite_metadata([("title","Kein Stroembernd")], playlist)
          playlist = rewrite_metadata([("artist","Radio freies Krautchan")], playlist)
          live = on_metadata(writemeta , live)

          full = fallback(track_sensitive=false,transitions=[crossfade],[live,playlist])
 mp3stream = output.icecast.lame(
            restart=true,
            host="localhost",port=8000,protocol="http",
            user="source",password="hackme",
            mount="radio.mp3",bitrate=192,
            url="radio.krautchan.net",public=false,
            restart_on_crash=true,
            fallible=true,
            full)
            oggstream = output.icecast.vorbis(
            restart=true,
            host="localhost",port=8000,protocol="http",
            user="source",password="hackme",
            mount="radio.ogg",quality=3.0,
            url="radio.krautchan.net",public=false,
            fallible=true,
            full)
            
